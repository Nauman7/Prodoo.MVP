/*
 * File: app/controller/Feedback.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProDooMobileApp.controller.Feedback', {
    extend: 'Ext.app.Controller',

    alternateClassName: [
        'Feedback'
    ],

    config: {
        control: {
            "button#FeedbackSubmitBtn": {
                tap: 'onFeedbackSubmitBtnTap'
            },
            "list#FeedbackList": {
                itemtap: 'onFeedbackListItemTap'
            }
        }
    },

    onFeedbackSubmitBtnTap: function(button, e, eOpts) {

        var loggedUserId = Ext.getStore('AuthStore').getAt(0).get('UserId');
        var store = Ext.getStore('FeedbackStore');
        var form  = G.get('FeedbackSubmitForm');
        var fields=form.getFields();
        fields.UserId.setValue(loggedUserId);
        fields.FeedbackId.setValue(0);
        store.removeAll();
        var record = form.getValues();
        if(record.Title.trim()==null || record.Title.trim()=="" && record.Content.trim()==null || record.Content.trim()=="")
        {

            Ext.Msg.alert('',"Please enter title and content to proceed.");
            return null;
        }
        store.add(record);
        G.hide('FeedbackSubmit');
        store.sync({
            callback: function(response)
            {
                G.show('FeedbackList');
                G.hide('FeedbackSubmitBtn');
                G.hide('FeedbackBack');
                G.show('FeedbackHomeButton');
                G.show('FeedbackAdd');
                form.reset();
                store.load();
            }
        });
    },

    onFeedbackListItemTap: function(dataview, index, target, record, e, eOpts) {
        var selectedItem = e.target;
        if(selectedItem.className.indexOf('x-button-label closeBtn')>=0) {

            G.DeleteItem('Feedback', function(){
                var store = Ext.getStore('FeedbackStore');
                store.remove(record);
                //store.sync();
                // store.sync is submitting all records again. So, using direct ajax call meanwhile
                Ext.Ajax.request({
                    url: ApiBaseUrl+'Feedback/DeleteFeedback',
                    method: 'Delete',
                    params : Ext.JSON.encode(record.data),
                    headers: { 'Content-Type': 'application/json' },
                    success: function(conn, response, options, eOpts) {
                        var store=Ext.getStore("FeedbackStore");
                        store.load({
                            callback : function() {
                                if(Ext.getStore('FeedbackStore').data.items.length<=0){
                                    G.show('FeedbackSplash');
                                    G.get('FeedbackSplash').setHtml(Identifier.Title.Splash_Feedback);
                                    G.hide('FeedbackList');
                                }
                            }
                        });

                    },
                    failure: function(conn, response, options, eOpts) {
                        //failure catch
                        G.showGeneralFailure();
                    }
                });

            });


        }
        else{
            G.hide('FeedbackList');
            G.show('FeedbackSubmit');
            G.hide('FeedbackAdd');
            G.hide('FeedbackHomeButton');
            G.show('FeedbackBack');
            var form = G.get('FeedbackSubmitForm');
            form.setValues(record.data);
            var fields=form.getFields();
            fields.Title.setReadOnly(true);
            fields.Content.setReadOnly(true);

        }
    }

});