/*
 * File: app/controller/Shortlist.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProDooMobileApp.controller.Shortlist', {
    extend: 'Ext.app.Controller',

    alternateClassName: [
        'Shortlist'
    ],

    statics: {
        onShortlistResumeItemClick: function(className, data) {

            if(className === 'x-button-label'){ // Delete Shortlist and associated resumes
                Shortlist.DeleteRecord(data);
            }

            else
            {
                // Save associated resume which are shortlisted in searched resume screen
                if(G.get('AddBtn').getHidden() && ResumeIdList && ResumeIdList.length>0){
                    var shortlistId=data.ShortlistId;
                    ResumeIdList.forEach(function(resumeId) {
                        Shortlist.onCreateShortListedResume(resumeId,shortlistId);
                    });

                    G.Pop();
                }
                else{//Load resume which are associated with shortlist
                    var shortlistName=data.ShortlistName;
                    Ext.Ajax.request({
                        url: ApiBaseUrl+'Shortlistresumes/get?shortlistid='+data.ShortlistId,
                        method: 'Get',
                        headers: { 'Content-Type': 'application/json' },
                        success: function(conn, response, options, eOpts) {

                            var result = Ext.JSON.decode(conn.responseText);
                            if (result.success) {
                                if(result.items!==null){
                                    var ResultSavedStore  = Ext.getStore('SearchResultSaved');
                                    ResultSavedStore.removeAll();
                                    //ResultSavedStore.sync();

                                    result.items.forEach(function(item,index){
                                        var model = new ProDooMobileApp.model.SearchResultSaved();
                                        model.set(item);
                                        ResultSavedStore.add(model);
                                    });

                                    G.Push('SearchResultSavedScreen');
                                    G.get('comeFrom').setValue('shortlist');

                                    // for shortlist we dont need to show other icons
                                    Ext.select('.SrNo').hide();
                                    Ext.select('.saveIconDiv').hide();
                                    Ext.select('.rightBottomSearchResultButtons').hide();

                                    Ext.select('.resultRight').elements.forEach(function(item,index){
                                        item.className = 'shortlistResultRight';
                                    });
                                    G.get('titleHeader').setData( { Total:shortlistName}).show();
                                    // disable pagging
                                    G.get('SearchResultSavedScreenId').setPlugins(null);

                                }
                                else{
                                    Ext.Msg.alert('Status', 'No matched resume found!',null);
                                }
                            } else {

                            }


                        },
                        failure: function(conn, response, options, eOpts) {
                            //failure catch

                        }
                    });
                }
            }
        },

        onCreateShortListedResume: function(resumeId, shortlistId) {
            var shortListObj = new Object();
            shortListObj.ResumeId = resumeId;
            shortListObj.ShortlistId = shortlistId;

            Ext.Ajax.request({
                url: ApiBaseUrl+'ShortlistResumes/Post',
                method: 'Post',
                headers: { 'Content-Type': 'application/json' },
                params : Ext.JSON.encode(shortListObj),
                success: function(conn, response, options, eOpts) {
                    var result = Ext.JSON.decode(conn.responseText);
                    if (!result.success)
                    G.showGeneralFailure();
                },
                failure: function(conn, response, options, eOpts) {
                    //failure catch
                    G.showGeneralFailure();
                }
            });
        },

        onCreateShortlist: function(shortlistTitle, ResumeIdList, shortlistId, hideCreateIcon) {
            var authStore = Ext.getStore('AuthStore');
            var authRec = authStore.getAt(0);

            var shortListObj = new Object();
            shortListObj.UserId = authRec.get('UserId');
            shortListObj.ShortlistName = shortlistTitle;
            shortListObj.ShortlistId = shortlistId?shortlistId: -1; // this method is also using to store shortlisted resume of existing shortlist
            shortListObj.ResumeIdsList = ResumeIdList;

            Ext.Ajax.request({
                url: ApiBaseUrl+'ShortLists/Post',
                method: 'Post',
                headers: { 'Content-Type': 'application/json' },
                params : Ext.JSON.encode(shortListObj),
                success: function(conn, response, options, eOpts) {
                    var result = Ext.JSON.decode(conn.responseText);
                    if (result.success)
                    {
                        if(localStorage.SubmitDirectRequest=="true")
                        {
                            G.get('hfShortlistId').setValue(result.items);
                            SaveSearch.saveSearchResume(true,shortlistTitle.replace('-shortlist', '-search'));

                        }
                        else
                        Shortlist.showShortListView(hideCreateIcon);
                    }
                    else
                    G.showGeneralFailure();

                },
                failure: function(conn, response, options, eOpts) {
                    //failure catch
                    G.showGeneralFailure();
                }
            });
        },

        showShortListView: function(hideCreateIcon) {
            var loggedUserId = Ext.getStore('AuthStore').getAt(0).get('UserId');
            var shortlistStore = Ext.getStore('ShortlistResumeStore');
            shortlistStore.load({
                params : { userId : loggedUserId
                },
                scope: this,
                callback: function(records,operation,success){
                    if(success){
                        var total = 0;
                        records.forEach(function(item,index){total +=item.data.Count;});
                        G.get('shortlistTotal').setData( { Total:total});
                    }//end if
                }//end callback
            });


            //var hf= G.get('hfResumeId'); //restore resumeID into hidden field
            //var tempId=hf? hf.getValue():-1;
            G.Push('Shortlist');
            //G.get('hfResumeId').setValue(-1);
            if(hideCreateIcon)
            G.hide('AddBtn');
        },

        DeleteRecord: function(data) {
            Ext.Ajax.request({
                url: ApiBaseUrl+'Shortlists/delete',
                method: 'Delete',
                params : Ext.JSON.encode(data),
                headers: { 'Content-Type': 'application/json' },
                success: function(conn, response, options, eOpts) {
                    var result = Ext.JSON.decode(conn.responseText);
                    if (result.success) {
                        Shortlist.showShortListView();
                    } else {
                        G.showGeneralFailure();
                    }

                },
                failure: function(conn, response, options, eOpts) {
                    //failure catch
                    G.showGeneralFailure();
                }
            });
        },

        DirectShortListIconClick: function() {
            if(ResumeIdList && ResumeIdList.length>0){
                Ext.Msg.show({
                    title: '',
                    message: 'You have picked '+ResumeIdList.length+' resumes to add to a shortlist. Would you like to create a new shortlist, or add them to an existing shortlist?',
                    buttons: [
                    {
                        text: 'Cancel',
                        ui: 'decline'
                    },
                    {
                        text: 'Add to Existing',
                    }, {
                        text: 'Create New',
                    }
                    ],
                    fn: function (buttonId) {
                        if(buttonId == 'Create New'){
                            Ext.defer( function() {
                                Ext.Msg.prompt('Add shortlist title', '',function(button,text){
                                    if(button==='ok')
                                    Shortlist.onCreateShortlist(text,ResumeIdList, -1);
                                });
                            }, 10 );

                        }
                        else if(buttonId== 'Add to Existing')
                        Shortlist.showShortListView(true);
                    }
                });
            }
            else
            Shortlist.showShortListView();
        }
    },

    config: {
    }
});