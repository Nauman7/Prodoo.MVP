/*
 * File: app/view/Shortlist.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProDooMobileApp.view.Shortlist', {
    extend: 'Ext.Container',
    alias: 'widget.Shortlist',

    requires: [
        'Ext.Button',
        'Ext.field.Search',
        'Ext.field.Hidden',
        'Ext.dataview.List',
        'Ext.XTemplate'
    ],

    config: {
        cls: 'RequestScreen',
        itemId: 'ShortlistView',
        scrollable: true,
        items: [
            {
                xtype: 'container',
                cls: 'searchViewCnt',
                docked: 'top',
                items: [
                    {
                        xtype: 'button',
                        cls: 'searchBtn',
                        itemId: 'searchBtn'
                    },
                    {
                        xtype: 'searchfield',
                        cls: 'searchRound',
                        itemId: 'mysearchfield',
                        clearIcon: false,
                        placeHolder: 'Search Shortlist'
                    }
                ]
            },
            {
                xtype: 'hiddenfield',
                id: 'hfResumeId'
            },
            {
                xtype: 'list',
                scrollable: true,
                cls: 'requestList',
                itemId: 'requestList',
                itemTpl: [
                    '<div class="requestCnt">',
                    '    <span class="reqNo">{ShortlistId}</span>',
                    '    <span class="reqName">{ShortlistName}</span>',
                    '    <span class="closeIcon">',
                    '        <span class="x-button-label"> </span>',
                    '    </span>',
                    '</div>'
                ],
                loadingText: false,
                store: 'ShortlistResumeStore'
            },
            {
                xtype: 'button',
                cls: 'requestBtn',
                docked: 'bottom',
                hidden: true,
                itemId: 'requestBtn',
                text: ' '
            },
            {
                xtype: 'button',
                cls: [
                    'backIcon',
                    'btnCircle',
                    'l10',
                    'b10'
                ],
                docked: 'bottom',
                itemId: 'PresentEditBackBtn3',
                text: ' '
            },
            {
                xtype: 'button',
                cls: 'addBtn',
                docked: 'bottom',
                itemId: 'AddBtn',
                text: ' '
            }
        ],
        listeners: [
            {
                fn: 'onMysearchfieldKeyup',
                event: 'keyup',
                delegate: '#mysearchfield'
            },
            {
                fn: 'onshorlistItemTap',
                event: 'itemtap',
                delegate: '#requestList'
            },
            {
                fn: 'onShortListBtnTap',
                event: 'tap',
                delegate: '#PresentEditBackBtn3'
            },
            {
                fn: 'onAddBtnTap',
                event: 'tap',
                delegate: '#AddBtn'
            }
        ]
    },

    onMysearchfieldKeyup: function(textfield, e, eOpts) {


        var store = Ext.getStore('ShortlistResumeStore');
        store.clearFilter();
        store.filter([
            {
                fn   : function(record) {
                    return record.get('ShortlistName').toLowerCase().startsWith(textfield.getValue().toLowerCase());
                },
                scope: this
            }
        ]);
    },

    onshorlistItemTap: function(dataview, index, target, record, e, eOpts) {
        var className = e.target.className;
        Shortlist.onShortlistResumeItemClick(className, record.data);
    },

    onShortListBtnTap: function(button, e, eOpts) {
        // G.ShowView('SearchResultSavedScreen');
        // var view =  G.get('SearchResultSavedScreenId');
        // Ext.Viewport.setActiveItem(view);

        G.Pop('Shortlist');
    },

    onAddBtnTap: function(button, e, eOpts) {
        Ext.create('Ext.MessageBox').show(
            {
                title: '',
                message: 'Save title',
                height:140,
                cls: 'messageBoxCls',
                width:500,
                padding:'0 20',
                prompt: {
                    height: 35
                },
                buttons: Ext.MessageBox.OKCANCEL,

                fn: function(buttonId, text) {
                    if (buttonId === 'ok') {
                        if(text.trim() ===''){
                            Ext.Msg.alert('Status', 'Please add some title!');
                            return;
                        }
                        localStorage.SubmitDirectRequest=false;
                        Shortlist.onCreateShortlist(text);
                    }
                }
            }
        );
    }

});