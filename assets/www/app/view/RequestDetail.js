/*
 * File: app/view/RequestDetail.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProDooMobileApp.view.RequestDetail', {
    extend: 'Ext.Container',
    alias: 'widget.RequestDetail',

    requires: [
        'Ext.form.Panel',
        'Ext.Label',
        'Ext.Button',
        'Ext.field.Hidden'
    ],

    config: {
        cls: 'RequestDetail',
        layout: 'fit',
        scrollable: true,
        items: [
            {
                xtype: 'formpanel',
                items: [
                    {
                        xtype: 'container',
                        cls: [
                            'bbBlack',
                            'reqHeader'
                        ],
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'labelCls',
                                    'left'
                                ],
                                itemId: 'SpanRequestName',
                                padding: 5
                            },
                            {
                                xtype: 'label',
                                cls: [
                                    'right',
                                    'reqAmountLbl'
                                ],
                                itemId: 'SpanHourlyFee',
                                padding: '5 10'
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'reqCompName',
                        html: '',
                        itemId: 'SpanCompanyName',
                        padding: '10 5',
                        listeners: [
                            {
                                fn: function(component, eOpts) {
                                    component.element.on('tap',function(){
                                        G.Push('CompanyDetail');
                                        G.show('companyBackBtn');
                                        G.hide('companyHomebtn');
                                        G.hide('CompanyAddNewBtn');
                                        Ext.select('.companyEdit').hide();
                                        Ext.select('.companyDelete').hide();

                                    });
                                },
                                single: true,
                                event: 'initialize'
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'reqLangDateCnt',
                        padding: 5,
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'reqDate',
                                    'left'
                                ],
                                itemId: 'SpanDateDuration',
                                width: '50%'
                            },
                            {
                                xtype: 'label',
                                cls: [
                                    'reqLang',
                                    'right'
                                ],
                                html: '',
                                itemId: 'SpanLanguageLocation',
                                width: '50%'
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'reqIntrestCnt',
                        padding: '12 50',
                        items: [
                            {
                                xtype: 'button',
                                cls: 'reqYesBtn',
                                itemId: 'acceptRequestBtn'
                            },
                            {
                                xtype: 'label',
                                cls: [
                                    'center',
                                    'labelCls'
                                ],
                                html: 'Interested or not',
                                itemId: 'labelInterestedOrNot'
                            },
                            {
                                xtype: 'button',
                                cls: 'reqNoBtn',
                                itemId: 'declineRequestBtn'
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'reqDetailCnt',
                        itemId: 'SpanDescription',
                        margin: '15 20',
                        padding: '10 20'
                    },
                    {
                        xtype: 'hiddenfield',
                        itemId: 'HFRequestId'
                    },
                    {
                        xtype: 'button',
                        cls: [
                            'backIcon',
                            'btnCircle',
                            'b10',
                            'l10'
                        ],
                        docked: 'bottom',
                        itemId: 'BackBtn',
                        text: ' '
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onMybutton10Tap',
                event: 'tap',
                delegate: '#acceptRequestBtn'
            },
            {
                fn: 'onMybutton19Tap',
                event: 'tap',
                delegate: '#declineRequestBtn'
            },
            {
                fn: 'onBackBtnTap',
                event: 'tap',
                delegate: '#BackBtn'
            }
        ]
    },

    onMybutton10Tap: function(button, e, eOpts) {
        Requests.ShowConfirmRequestView();


    },

    onMybutton19Tap: function(button, e, eOpts) {
        var requestId=G.get("HFRequestId").getHtml();
        var requestName= G.get("SpanRequestName").getHtml();
        Requests.DeleteRequestResume(requestId, requestName, true);
    },

    onBackBtnTap: function(button, e, eOpts) {
        // G.showHomeView();
        G.Pop();
    }

});