/*
 * File: app/view/ResumeView.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProDooMobileApp.view.ResumeView', {
    extend: 'Ext.Container',
    alias: 'widget.ResumeView',

    requires: [
        'Ext.Button',
        'Ext.Label',
        'Ext.field.Hidden',
        'Ext.field.Search',
        'Ext.dataview.List',
        'Ext.XTemplate',
        'Ext.field.DatePicker',
        'Ext.picker.Date',
        'Ext.field.TextArea'
    ],

    config: {
        scrollable: true,
        cls: [
            'tabPanel',
            'ResumeView'
        ],
        items: [
            {
                xtype: 'container',
                docked: 'top',
                height: 50,
                itemId: 'topButtons',
                margin: '10 0 0 0',
                scrollable: 'horizontal',
                layout: {
                    type: 'hbox',
                    align: 'start',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'button',
                        cls: [
                            'tabIconSpan',
                            'profileTabIcon',
                            'activeBtn'
                        ],
                        html: ' ',
                        itemId: 'profileBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: [
                            'tabIconSpan',
                            'editTabIcon'
                        ],
                        html: ' ',
                        itemId: 'SkillsBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: [
                            'tabIconSpan',
                            'savedTabIcon'
                        ],
                        html: ' ',
                        itemId: 'IndustryBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: [
                            'tabIconSpan',
                            'skillTabIcon'
                        ],
                        html: ' ',
                        itemId: 'keywordBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: [
                            'tabIconSpan',
                            'certificationTabIcon'
                        ],
                        html: ' ',
                        itemId: 'certificationBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: [
                            'tabIconSpan',
                            'languageTabIcon'
                        ],
                        hidden: true,
                        html: '<span class="tabIcon languageTabIcon"> </span>',
                        itemId: 'languageBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: [
                            'tabIconSpan',
                            'settingTabIcon'
                        ],
                        html: ' ',
                        itemId: 'SettingBtn',
                        margin: '0 2'
                    }
                ]
            },
            {
                xtype: 'label',
                cls: 'ResumeLabel',
                docked: 'top',
                html: 'Profile',
                itemId: 'buttonsLabel',
                padding: '2 0 0 0'
            },
            {
                xtype: 'container',
                cls: 'searchViewCnt',
                docked: 'top',
                itemId: 'searchViewCntID',
                items: [
                    {
                        xtype: 'button',
                        cls: 'searchBtn',
                        itemId: 'searchBtn'
                    },
                    {
                        xtype: 'hiddenfield',
                        itemId: 'SearchRecordID'
                    },
                    {
                        xtype: 'searchfield',
                        cls: 'searchRound',
                        itemId: 'mysearchfield',
                        clearIcon: false,
                        placeHolder: 'Enter profile'
                    },
                    {
                        xtype: 'button',
                        cls: 'addIcon',
                        hidden: true,
                        html: ' ',
                        itemId: 'AddSearchBtn'
                    },
                    {
                        xtype: 'button',
                        cls: 'clearIcon',
                        hidden: true,
                        html: ' ',
                        itemId: 'ClearSearchIcon'
                    },
                    {
                        xtype: 'list',
                        scrollable: true,
                        cls: 'searchList',
                        height: 250,
                        hidden: true,
                        itemId: 'SearchList',
                        margin: '0 40',
                        maxHeight: 250,
                        itemTpl: [
                            '<div class="listResult">',
                            '        <span class="listTitle">{SkillValue}{KeywordValue}{CertificationValue}{IndustryValue}{ProfileValue}</span>',
                            '</div>'
                        ],
                        store: 'SearchProfile',
                        listeners: [
                            {
                                fn: function(component, eOpts) {
                                    component.on('refresh',function(){
                                        this.setHeight(null);
                                        var ViewHeight = Ext.get(this.element.query('.x-scroll-scroller')[0]).getHeight();
                                        if(ViewHeight > 10)
                                        this.setHeight(ViewHeight);
                                    });
                                },
                                event: 'initialize'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'splashCnt',
                hidden: true,
                itemId: 'SplashCnt',
                items: [
                    {
                        xtype: 'container',
                        cls: 'splashHeaderCnt',
                        items: [
                            {
                                xtype: 'label',
                                html: 'Welcome to your resume profile section!',
                                itemId: 'SplashHeading'
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'splashDetail',
                        html: '',
                        itemId: 'SplashDetail'
                    },
                    {
                        xtype: 'hiddenfield',
                        html: ' all ',
                        itemId: 'HelpDisable'
                    }
                ]
            },
            {
                xtype: 'container',
                itemId: 'resultCnt',
                margin: '50 0 100 ',
                items: [
                    {
                        xtype: 'container',
                        cls: 'LabelCnt',
                        hidden: true,
                        itemId: 'ProfileCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Profile '
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'labelCls',
                                        html: 'Sample Profile',
                                        width: 120
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        pressedCls: null,
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'LabelCnt',
                        hidden: true,
                        itemId: 'SkillCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Skills'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'labelCls',
                                        html: 'Sample Skills',
                                        width: 120
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        pressedCls: null,
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        hidden: true,
                        itemId: 'IndustryCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Industry'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'labelCls',
                                        html: 'Sample Industry',
                                        width: 120
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        pressedCls: null,
                                        text: ' '
                                    }
                                ]
                            },
                            {
                                xtype: 'list',
                                cls: 'IndustryList',
                                itemId: 'IndustryList',
                                margin: '20 0 0 0',
                                width: '100%',
                                hideOnMaskTap: false,
                                itemTpl: [
                                    '<div class="indDate">',
                                    '    <span class="indEdit"></span>',
                                    '    <span class="indDelete"></span>',
                                    '    {CompanyWorked}',
                                    '    ',
                                    '</div>',
                                    '<div class="indMain">',
                                    '    <div class="indHeading">',
                                    '        ',
                                    '        <span class="indProfile">{ProfileValue}</span>',
                                    '        <span class="compWorkedDate">{StartDateYear} - {EndDateYear}</span>',
                                    '    </div>',
                                    '    <div class="indDescriptionCnt">',
                                    '        ',
                                    '        <div class="indDescription">{Description}</div>',
                                    '    </div>',
                                    '    <span class="indArrow"></span>',
                                    '</div>'
                                ],
                                pressedCls: '',
                                selectedCls: '',
                                store: 'ResumeExperiencesStore'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                itemId: 'createCompanyCnt',
                                items: [
                                    {
                                        xtype: 'textfield',
                                        cls: [
                                            'inputCls',
                                            'bbBlack'
                                        ],
                                        itemId: 'CreateExpCompanyName',
                                        clearIcon: false,
                                        label: 'Company',
                                        labelCls: 'labelCls',
                                        labelWidth: 110,
                                        name: 'CompanyWorked',
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    component.setLabelAlign('left');
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'selectfield',
                                        cls: [
                                            'DateCls',
                                            'TriggerBlue',
                                            'bbBlack'
                                        ],
                                        itemId: 'CreateExpIndustry',
                                        label: 'Industry',
                                        labelCls: 'labelCls',
                                        labelWidth: 110,
                                        name: 'IndustryId',
                                        placeHolder: 'Select Industry',
                                        autoSelect: false,
                                        defaultPhonePickerConfig: {
                                            zIndex: 999
                                        },
                                        defaultTabletPickerConfig: {
                                            zIndex: 999
                                        },
                                        displayField: 'IndustryValue',
                                        store: 'IndustriesStore',
                                        valueField: 'IndustryId',
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    component.setLabelAlign('left');
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'selectfield',
                                        cls: [
                                            'DateCls',
                                            'TriggerBlue',
                                            'bbBlack'
                                        ],
                                        itemId: 'CreateExpProfile',
                                        label: 'Profile',
                                        labelCls: 'labelCls',
                                        labelWidth: 110,
                                        name: 'ProfileId',
                                        placeHolder: 'Select Profile',
                                        autoSelect: false,
                                        defaultPhonePickerConfig: {
                                            zIndex: 999
                                        },
                                        defaultTabletPickerConfig: {
                                            zIndex: 999
                                        },
                                        displayField: 'ProfileValue',
                                        store: 'ProfilesStore',
                                        valueField: 'ProfileId',
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    component.setLabelAlign('left');
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        cls: 'bbBlack',
                                        items: [
                                            {
                                                xtype: 'datepickerfield',
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue',
                                                    'bbBlack'
                                                ],
                                                itemId: 'CreateExpStartDate',
                                                label: 'From',
                                                labelCls: 'labelCls',
                                                labelWidth: 110,
                                                name: 'StartDate',
                                                value: {
                                                    day: new Date().getDate(),
                                                    month: (new Date().getMonth()+1),
                                                    year: new Date().getFullYear()
                                                },
                                                placeHolder: 'mm/dd/yyyy',
                                                dateFormat: 'd/m/y',
                                                picker: {
                                                    zIndex: 100,
                                                    doneButton: {
                                                        itemId: 'Done'
                                                    }
                                                },
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'datepickerfield',
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue'
                                                ],
                                                itemId: 'CreateExpEndDate',
                                                label: 'To',
                                                labelCls: 'labelCls',
                                                labelWidth: 110,
                                                name: 'EndDate',
                                                value: {
                                                    day: new Date().getDate(),
                                                    month: (new Date().getMonth()+1),
                                                    year: new Date().getFullYear()
                                                },
                                                placeHolder: 'mm/dd/yyyy',
                                                dateFormat: 'd/m/y',
                                                picker: {
                                                    zIndex: 100,
                                                    doneButton: {
                                                        itemId: 'Done'
                                                    }
                                                },
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        cls: 'requestInnerCnt',
                                        items: [
                                            {
                                                xtype: 'textareafield',
                                                cls: 'textarea',
                                                itemId: 'CreateExpDescription',
                                                clearIcon: false,
                                                name: 'Description'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'hiddenfield',
                                        itemId: 'HFresumeExperienceId'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'LabelCnt',
                        hidden: true,
                        itemId: 'KeywordCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Keyword'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        flex: 1,
                                        cls: 'labelCls',
                                        html: 'Sample keyword'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        pressedCls: null,
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'LabelCnt',
                        hidden: true,
                        itemId: 'CertificationCnt',
                        margin: '0 0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Certification'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        flex: 1,
                                        cls: 'labelCls',
                                        html: 'Sample keyword'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        pressedCls: null,
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        hidden: true,
                        itemId: 'LanguageCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Language'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'labelCls',
                                        html: 'Sample Language',
                                        width: 120
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        hidden: true,
                        itemId: 'SettingCnt',
                        margin: '0 0 10',
                        items: [
                            {
                                xtype: 'container',
                                cls: 'AvailableCnt',
                                itemId: 'availabilityCnt',
                                padding: '5 10 7',
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: [
                                            'labelCls',
                                            'cWhite',
                                            'left'
                                        ],
                                        html: 'Available',
                                        itemId: 'availabilityLbl',
                                        padding: '5 0 0 0'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'AvailableBtn',
                                            'right'
                                        ],
                                        itemId: 'availabilityBtn',
                                        pressedCls: null,
                                        text: ' '
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                items: [
                                    {
                                        xtype: 'container',
                                        cls: 'requestInnerCnt',
                                        items: [
                                            {
                                                xtype: 'datepickerfield',
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue'
                                                ],
                                                itemId: 'mydatepicker',
                                                label: 'Available From',
                                                labelCls: 'labelCls',
                                                labelWidth: 150,
                                                name: 'AvailabilityDate',
                                                placeHolder: 'mm/dd/yyyy',
                                                dateFormat: 'm/d/y',
                                                picker: {
                                                    itemId: 'AvailabilityDatePicker',
                                                    zIndex: 100,
                                                    doneButton: {
                                                        itemId: 'AvailabilityDateDone'
                                                    }
                                                },
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                            var d= new Date();
                                                            d.getFullYear();
                                                            component.getPicker().setYearFrom(d.getFullYear());
                                                            component.getPicker().setYearTo(d.getFullYear()+5);
                                                            component.setValue(d);
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        cls: 'requestInnerCnt',
                                        items: [
                                            {
                                                xtype: 'selectfield',
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue'
                                                ],
                                                itemId: 'locationSelectField',
                                                label: 'Location',
                                                labelCls: 'labelCls',
                                                labelWidth: 100,
                                                name: 'CountryId',
                                                placeHolder: 'Choose location',
                                                autoSelect: false,
                                                defaultPhonePickerConfig: {
                                                    zIndex: 999
                                                },
                                                defaultTabletPickerConfig: {
                                                    zIndex: 999
                                                },
                                                displayField: 'CountryName',
                                                store: 'CreateRequestLocation',
                                                valueField: 'CountryId',
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                itemId: 'SettingDateCnt',
                                items: [
                                    {
                                        xtype: 'container',
                                        cls: 'resumeLanguage',
                                        padding: '0 10',
                                        items: [
                                            {
                                                xtype: 'button',
                                                cls: [
                                                    'PlusMiniBtn',
                                                    'right'
                                                ],
                                                itemId: 'ResumeSettingAdd',
                                                pressedCls: null
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'button',
                cls: [
                    'btnCircle',
                    'confirmIcon'
                ],
                docked: 'bottom',
                hidden: true,
                itemId: 'CompanyExperienceComfirm',
                text: ' '
            },
            {
                xtype: 'button',
                cls: [
                    'addBtn',
                    'bgBlue',
                    'r10',
                    'b10'
                ],
                docked: 'bottom',
                hidden: true,
                itemId: 'CreateCompanyExperience',
                text: ' '
            },
            {
                xtype: 'button',
                cls: [
                    'backIcon',
                    'btnCircle',
                    'b10',
                    'l10',
                    'bgBlue'
                ],
                docked: 'bottom',
                itemId: 'EditResumeBackBtn',
                text: ' '
            },
            {
                xtype: 'button',
                cls: [
                    'backIcon',
                    'btnCircle',
                    'b10',
                    'l10',
                    'bgBlue'
                ],
                docked: 'bottom',
                hidden: true,
                itemId: 'BackToExperience',
                text: ' '
            }
        ],
        listeners: [
            {
                fn: 'onProfileTap',
                event: 'tap',
                delegate: '#profileBtn'
            },
            {
                fn: 'onSkillsTap',
                event: 'tap',
                delegate: '#SkillsBtn'
            },
            {
                fn: 'onPortfolioTap',
                event: 'tap',
                delegate: '#IndustryBtn'
            },
            {
                fn: 'onKeywordTap',
                event: 'tap',
                delegate: '#keywordBtn'
            },
            {
                fn: 'onCertificationTap',
                event: 'tap',
                delegate: '#certificationBtn'
            },
            {
                fn: 'onLanguageTap',
                event: 'tap',
                delegate: '#languageBtn'
            },
            {
                fn: 'onSettingTap',
                event: 'tap',
                delegate: '#SettingBtn'
            },
            {
                fn: 'onMysearchfieldKeyup',
                event: 'keyup',
                delegate: '#mysearchfield'
            },
            {
                fn: 'onAddSearchBtnTap',
                event: 'tap',
                delegate: '#AddSearchBtn'
            },
            {
                fn: 'onClearSearchIconTap',
                event: 'tap',
                delegate: '#ClearSearchIcon'
            },
            {
                fn: 'onSearchListItemTap',
                event: 'itemtap',
                delegate: '#SearchList'
            },
            {
                fn: 'onCloseButtonTap',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'onCloseButtonTap1',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'onCloseButtonTap121',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'onIndustryListItemTap1',
                event: 'itemtap',
                delegate: '#IndustryList'
            },
            {
                fn: 'onDoneTap11',
                event: 'tap',
                delegate: '#Done'
            },
            {
                fn: 'onCloseButtonTap11',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'onCloseButtonTap111',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'oncheckBtnTap',
                event: 'tap',
                delegate: '#availabilityBtn'
            },
            {
                fn: 'onMydatepickerChange',
                event: 'change',
                delegate: '#mydatepicker'
            },
            {
                fn: 'onLocationSelectFieldChange',
                event: 'change',
                delegate: '#locationSelectField'
            },
            {
                fn: 'onResumeSettingAddTap',
                event: 'tap',
                delegate: '#ResumeSettingAdd'
            },
            {
                fn: 'onCompanyExperienceComfirmTap',
                event: 'tap',
                delegate: '#CompanyExperienceComfirm'
            },
            {
                fn: 'onCreateCompanyExperienceTap',
                event: 'tap',
                delegate: '#CreateCompanyExperience'
            },
            {
                fn: 'onBackBtnTap',
                event: 'tap',
                delegate: '#EditResumeBackBtn'
            },
            {
                fn: 'onBackToExperienceTap',
                event: 'tap',
                delegate: '#BackToExperience'
            },
            {
                fn: 'onContainerPainted',
                single: true,
                event: 'painted'
            }
        ]
    },

    onProfileTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Profile');
    },

    onSkillsTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Skill');
    },

    onPortfolioTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Industry');
    },

    onKeywordTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Keyword');
    },

    onCertificationTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Certification');
    },

    onLanguageTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Language');
    },

    onSettingTap: function(button, e, eOpts) {
        // UserResume.onTopBtnTap(button,'Setting');
        UserResume.onSettingBtnTap(button);
    },

    onMysearchfieldKeyup: function(textfield, e, eOpts) {
        UserResume.resumePropertySearch(textfield);
    },

    onAddSearchBtnTap: function(button, e, eOpts) {
        UserResume.onAddSearchBtnTap();
    },

    onClearSearchIconTap: function(button, e, eOpts) {
        UserResume.clearSearch();
    },

    onSearchListItemTap: function(dataview, index, target, record, e, eOpts) {
        UserResume.onSearchListItemTap(dataview,record,e);
    },

    onCloseButtonTap: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onCloseButtonTap1: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onCloseButtonTap121: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onIndustryListItemTap1: function(dataview, index, target, record, e, eOpts) {
        var targetElement = Ext.get(e.target);
        if(targetElement.hasCls('indArrow') ){
            targetElement.parent('.indMain').toggleCls('indVisible');
        }
        else if (targetElement.hasCls('indEdit')){
            UserResume.ShowCreateResumeExperience(record,index);

        }
        else if (targetElement.hasCls('indDelete'))
        {
            var url = ApiBaseUrl+'ResumeExperiences/DeleteResumeExperience';

            Ext.Ajax.request({
                url: url,
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
                params : Ext.JSON.encode(record.data),
                success: function(conn, response, options, eOpts) {
                    var result = Ext.JSON.decode(conn.responseText);
                    if (result.success) {

                        var str=Ext.getStore("ResumeExperiencesStore");
                        var rec=str.data.items[index];
                        var expStore=Ext.getStore("SearchResultDetail");
                        var expRec =expStore.getAt(0);
                        var expIndex = -1;
                        expRec.data.ResumeExperience.forEach(function(item,index){
                            if(item.ResumeExperienceId==rec.data.ResumeExperienceId){
                               expIndex = index;}});
                        expRec.data.ResumeExperience.pop(expIndex);
                        str.remove(rec);
                    }
                },
               failure: function(response, request) {
                    //failure catch
                   G.showGeneralFailure('', response);
                }
            });
        }
    },

    onDoneTap11: function(button, e, eOpts) {

    },

    onCloseButtonTap11: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onCloseButtonTap111: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onCloseButtonTap12: function(button, e, eOpts) {
        button.up('container').hide();
    },

    oncheckBtnTap: function(button, e, eOpts) {
        var button=G.get('availabilityBtn');
        UserResume.changeAvailibilityStatus(button.element.hasCls('busyBtn'), true);
    },

    onMydatepickerChange: function(datepickerfield, newDate, oldDate, eOpts) {
        var item = UserResume.getActiveBtn();

        if(item===6)// if settings btn active
        {
            var isAvailable=newDate<=new Date();
            var requestSettingObj = new Object();
            requestSettingObj.AvailabilityDate = newDate;
            requestSettingObj.IsAvailable=isAvailable;
            UserResume.updateSettings_Instant(requestSettingObj);

            if(isAvailable) // avaialble for past date and today
                UserResume.changeAvailibilityStatus(true);
            else
                UserResume.changeAvailibilityStatus(false);
        }
    },

    onLocationSelectFieldChange: function(selectfield, newValue, oldValue, eOpts) {
        var item = UserResume.getActiveBtn();
        if(item===6)// if settings btn active
        {
            var requestSettingObj = new Object();
            requestSettingObj.RegionId = newValue;
            UserResume.updateSettings_Instant(requestSettingObj);
        }
    },

    onResumeSettingAddTap: function(button, e, eOpts) {
        this.addNewLevel();
    },

    onCompanyExperienceComfirmTap: function(button, e, eOpts) {
        UserResume.SaveCompanyExperience();
    },

    onCreateCompanyExperienceTap: function(button, e, eOpts) {

        UserResume.ShowCreateResumeExperience(null);
    },

    onBackBtnTap: function(button, e, eOpts) {
        // G.showHomeView();
        UserResume.onResumeClick();

    },

    onBackToExperienceTap: function(button, e, eOpts) {
        G.hide('createCompanyCnt');
        G.show('IndustryList');
        G.hide('CompanyExperienceComfirm');
        G.show('EditResumeBackBtn');
        G.hide('BackToExperience');
        G.show('CreateCompanyExperience');


        var loggedUser = Ext.getStore('AuthStore').getAt(0);
        var resumeId = loggedUser.get('ResumeId');

        var expStr = Ext.getStore('ResumeExperiencesStore');
        var expData=Ext.getStore("SearchResultDetail").data.items[0].data.ResumeExperience;
        UserResume.SplashView('Industry',!expData.length>0);
    },

    onContainerPainted: function(element, eOpts) {
        element.on('tap',function(e){
            var selectedElement =Ext.get(e.target);
            if(!selectedElement.parent('.searchViewCnt')){
                G.hide('SearchList');
            }
        });
    },

    addNewLevel: function() {
        UserResume.CloneLangaugeControl(0,2);
    }

});