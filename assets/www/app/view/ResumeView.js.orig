/*
 * File: app/view/ResumeView.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProDooMobileApp.view.ResumeView', {
    extend: 'Ext.Container',
    alias: 'widget.ResumeView',

    requires: [
        'Ext.Button',
        'Ext.Label',
        'Ext.field.Hidden',
        'Ext.field.Search',
        'Ext.dataview.List',
        'Ext.XTemplate',
        'Ext.field.Slider',
        'Ext.field.DatePicker',
        'Ext.picker.Date',
        'Ext.field.TextArea'
    ],

    config: {
        cls: 'tabPanel ResumeView',
        scrollable: true,
        items: [
            {
                xtype: 'container',
                docked: 'top',
                height: 50,
                itemId: 'topButtons',
                margin: '10 0 0 0',
                scrollable: 'horizontal',
                layout: {
                    type: 'hbox',
                    align: 'start',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'button',
                        cls: [
                            'tabIconSpan',
                            'activeBtn'
                        ],
                        html: '<span class="tabIcon profileTabIcon"> </span>',
                        itemId: 'profileBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: 'tabIconSpan',
                        html: '<span class="tabIcon editTabIcon"> </span>',
                        itemId: 'SkillsBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: 'tabIconSpan',
                        html: '<span class="tabIcon savedTabIcon"> </span>',
                        itemId: 'IndustryBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: 'tabIconSpan',
                        html: '<span class="tabIcon skillTabIcon"> </span>',
                        itemId: 'keywordBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: 'tabIconSpan',
                        html: '<span class="tabIcon certificationTabIcon"> </span>',
                        itemId: 'certificationBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: 'tabIconSpan',
                        hidden: true,
                        html: '<span class="tabIcon languageTabIcon"> </span>',
                        itemId: 'languageBtn',
                        margin: '0 2'
                    },
                    {
                        xtype: 'button',
                        cls: 'tabIconSpan',
                        html: '<span class="tabIcon settingTabIcon"> </span>',
                        itemId: 'SettingBtn',
                        margin: '0 2'
                    }
                ]
            },
            {
                xtype: 'label',
                cls: 'ResumeLabel',
                docked: 'top',
                html: 'Profile',
                itemId: 'buttonsLabel',
                padding: '2 0 0 0'
            },
            {
                xtype: 'container',
                cls: 'searchViewCnt',
                docked: 'top',
                itemId: 'searchViewCntID',
                items: [
                    {
                        xtype: 'button',
                        cls: 'searchBtn',
                        itemId: 'searchBtn'
                    },
                    {
                        xtype: 'hiddenfield',
                        itemId: 'SearchRecordID'
                    },
                    {
                        xtype: 'searchfield',
                        cls: 'searchRound',
                        itemId: 'mysearchfield',
                        clearIcon: false,
                        placeHolder: 'Enter profile'
                    },
                    {
                        xtype: 'button',
                        cls: 'addIcon',
                        hidden: true,
                        html: ' ',
                        itemId: 'AddSearchBtn'
                    },
                    {
                        xtype: 'button',
                        cls: 'clearIcon',
                        hidden: true,
                        html: ' ',
                        itemId: 'ClearSearchIcon'
                    },
                    {
                        xtype: 'list',
                        scrollable: true,
                        cls: 'searchList',
                        height: 250,
                        hidden: true,
                        itemId: 'SearchList',
                        margin: '0 40',
                        itemTpl: [
                            '<div class="listResult">',
                            '        <span class="listTitle">{SkillValue}{KeywordValue}{CertificationValue}{IndustryValue}{ProfileValue}</span>',
                            '</div>'
                        ],
                        store: 'SearchProfile'
                    }
                ]
            },
            {
                xtype: 'container',
                itemId: 'resultCnt',
                margin: '50 0 100 ',
                items: [
                    {
                        xtype: 'container',
                        cls: 'LabelCnt',
                        hidden: true,
                        itemId: 'ProfileCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Profile '
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'labelCls',
                                        html: 'Sample Profile',
                                        width: 120
                                    },
                                    {
                                        xtype: 'sliderfield',
                                        flex: 1,
                                        cls: 'sliderCls',
                                        itemId: 'mysliderfield3',
                                        value: [
                                            0
                                        ],
                                        maxValue: 10,
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    var thumb = component.element.dom.querySelector('.x-thumb');
                                                    thumb.insertAdjacentHTML( 'afterBegin', '<span class="xValue">0</span>' );
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'LabelCnt',
                        hidden: true,
                        itemId: 'SkillCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Skills'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'labelCls',
                                        html: 'Sample Skills',
                                        width: 120
                                    },
                                    {
                                        xtype: 'sliderfield',
                                        flex: 1,
                                        cls: 'sliderCls',
                                        itemId: 'mysliderfield3',
                                        value: [
                                            0
                                        ],
                                        maxValue: 10,
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    var thumb = component.element.dom.querySelector('.x-thumb');
                                                    thumb.insertAdjacentHTML( 'afterBegin', '<span class="xValue">0</span>' );
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        hidden: true,
                        itemId: 'IndustryCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Industry'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'labelCls',
                                        html: 'Sample Industry',
                                        width: 120
                                    },
                                    {
                                        xtype: 'sliderfield',
                                        flex: 1,
                                        cls: 'sliderCls',
                                        value: [
                                            0
                                        ],
                                        maxValue: 10,
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    var thumb = component.element.dom.querySelector('.x-thumb');
                                                    thumb.insertAdjacentHTML( 'afterBegin', '<span class="xValue">0</span>' );
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        text: ' '
                                    }
                                ]
                            },
                            {
                                xtype: 'list',
                                scrollable: true,
                                cls: 'IndustryList',
                                hidden: true,
                                itemId: 'IndustryListhidden',
                                margin: 0,
                                width: '100%',
                                hideOnMaskTap: false,
                                itemTpl: [
                                    '<div class="CertTitleWrap">',
                                    '    <span class="certTtile">Paluapps dan SHMILY Company</span>',
                                    '    <span class="ArrowUp"> </span>',
                                    '</div>',
                                    '',
                                    '<div class="ViewCnt">',
                                    '    <div class="tabHeading">',
                                    '        <span class="wProfileIcon"> </span>',
                                    '        <span class="PlusMiniBtn right"> </span>',
                                    '    </div>',
                                    '    <div class="Innerlist">',
                                    '        <tpl for="Profile">',
                                    '            <div class="sliderCnt"> </div>',
                                    '             ',
                                    '        </tpl>',
                                    '    </div>',
                                    '</div>',
                                    '<div class="ViewCnt">',
                                    '    <div class="tabHeading">',
                                    '        <span class="wSkillIcon"> </span>',
                                    '        <span class="PlusMiniBtn right"> </span>',
                                    '    </div>',
                                    '    <div class="Innerlist">',
                                    '        <tpl for="Skill">',
                                    '            <div class="sliderCnt"> </div>',
                                    '        </tpl>',
                                    '    </div>',
                                    '</div>',
                                    '',
                                    '<div class="ViewCnt">',
                                    '    <div class="tabHeading">',
                                    '        <span class="wKeywordIcon"> </span>',
                                    '        <span class="PlusMiniBtn right"> </span>',
                                    '    </div>',
                                    '    <div class="Innerlist">',
                                    '        <tpl for="Skill">',
                                    '            <div class="KeywordDiv"> </div>',
                                    '        </tpl>',
                                    '',
                                    '    </div>',
                                    '</div>',
                                    '',
                                    '<div class="ViewCnt">',
                                    '    <div class="tabHeading">',
                                    '        <span class="wGraphIcon"> </span>',
                                    '        <span class="PlusMiniBtn right"> </span>',
                                    '    </div>',
                                    '    <div class="Innerlist">',
                                    '            <div class="userDesc">',
                                    '           </div>',
                                    '    </div>',
                                    '</div>',
                                    ''
                                ],
                                pressedCls: '',
                                selectedCls: '',
                                store: 'resumeCertification',
                                listeners: [
                                    {
                                        fn: function(element, eOpts) {

                                            Ext.select('.sliderCnt', this.el).each(function(el){
                                                var Cnt=Ext.create('Ext.Container', {
                                                    padding: '5 0',
                                                    layout: {
                                                        type: 'hbox',
                                                        align: 'center'
                                                    },
                                                    items: [
                                                    {
                                                        xtype: 'sliderfield',
                                                        flex: 1,
                                                        cls: 'sliderCls',
                                                        label: 'Programmer',
                                                        labelWidth: 110,
                                                        value: [
                                                        0
                                                        ],
                                                        maxValue: 10,
                                                        listeners: [
                                                        {
                                                            fn: function(component, eOpts) {
                                                                component.setLabelAlign('left');
                                                                var thumb = component.element.dom.querySelector('.x-thumb');
                                                                thumb.insertAdjacentHTML( 'afterBegin', '<span class="xValue">0</span>' );
                                                            },
                                                            event: 'initialize'
                                                        },
                                                        {
                                                            fn: function(sliderfield, sl, thumb, e, eOpts) {

                                                                var slider=sliderfield.element.dom.querySelector('.xValue');
                                                                slider.innerText = sliderfield.getValue()[0];
                                                            },
                                                            event: 'drag'
                                                        },
                                                        {
                                                            fn: function(sliderfield, sl, thumb, e, eOpts) {
                                                                var slider=sliderfield.element.dom.querySelector('.xValue');
                                                                slider.innerText = sliderfield.getValue()[0];

                                                            },
                                                            event: 'change'
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        xtype: 'button',
                                                        cls: [
                                                        'closeIcon',
                                                        'noBorder'
                                                        ],
                                                        text: ' ',
                                                        listeners: [
                                                        {
                                                            fn: function(button, e, eOpts) {

                                                            },
                                                            event: 'tap'
                                                        }
                                                        ]
                                                    }
                                                    ],
                                                    renderTo: el
                                                });
                                            });


                                            Ext.select('.KeywordDiv', this.el).each(function(el){

                                                var Cnt=Ext.create('Ext.Container', {
                                                    padding: '5 0',
                                                    layout: {
                                                        type: 'hbox',
                                                        align: 'center'
                                                    },
                                                    items: [
                                                    {
                                                        xtype: 'label',
                                                        flex: 1,
                                                        cls: 'labelCls',
                                                        html: 'HTML',
                                                    },
                                                    {
                                                        xtype: 'button',
                                                        cls: [
                                                        'closeIcon',
                                                        'noBorder'
                                                        ],
                                                        text: ' ',
                                                        listeners: [
                                                        {
                                                            fn: function(button, e, eOpts) {


                                                            },
                                                            event: 'tap'
                                                        }
                                                        ]
                                                    }
                                                    ],
                                                    renderTo: el
                                                });
                                            });


                                            Ext.select('.userDesc', this.el).each(function(el){

                                                var Cnt=Ext.create('Ext.Container', {
                                                    items: [{
                                                        xtype: 'container',
                                                        layout: {
                                                            type: 'hbox',
                                                            align: 'center'
                                                        },
                                                        items: [

                                                        {
                                                            xtype: 'selectfield',
                                                            cls: [
                                                            'DateCls',
                                                            'TriggerBlue'
                                                            ],
                                                            flex: 1,
                                                            value: '2003',
                                                            autoSelect: false,
                                                            displayField: 'date',
                                                            store: 'CreateRequestDay'
                                                        },
                                                        {
                                                            xtype: 'label',
                                                            flex: 1,
                                                            cls: 'labelCls center',
                                                            html: 'to',
                                                        },
                                                        {
                                                            xtype: 'selectfield',
                                                            cls: [
                                                            'DateCls',
                                                            'TriggerBlue'
                                                            ],
                                                            flex: 1,
                                                            value: '2006',
                                                            autoSelect: false,
                                                            displayField: 'date',
                                                            store: 'CreateRequestDay'
                                                        }]
                                                    },
                                                    {
                                                        xtype: 'textareafield',
                                                        cls: 'textarea'
                                                    }],
                                                    renderTo: el
                                                });
                                            });
                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'list',
                                cls: 'IndustryList',
                                itemId: 'IndustryList',
                                margin: '20 0 0 0',
                                width: '100%',
                                hideOnMaskTap: false,
                                itemTpl: [
                                    '<div class="indDate">',
                                    '    <span class="indEdit"></span>',
                                    '    <span class="indDelete"></span>',
                                    '    {CompanyWorked}',
                                    '    ',
                                    '</div>',
                                    '<div class="indMain">',
                                    '    <div class="indHeading">',
                                    '        ',
                                    '        <span class="indProfile">{ProfileValue}</span>',
                                    '        <span class="compWorkedDate">{StartDateYear} - {EndDateYear}</span>',
                                    '    </div>',
                                    '    <div class="indDescriptionCnt">',
                                    '        ',
                                    '        <div class="indDescription">{Description}</div>',
                                    '    </div>',
                                    '</div>'
                                ],
                                pressedCls: '',
                                selectedCls: '',
                                store: 'ResumeExperiencesStore'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                itemId: 'createCompanyCnt',
                                items: [
                                    {
                                        xtype: 'textfield',
                                        cls: [
                                            'inputCls',
                                            'bbBlack'
                                        ],
                                        itemId: 'CreateExpCompanyName',
                                        clearIcon: false,
                                        label: 'Company',
                                        labelCls: 'labelCls',
                                        labelWidth: 90,
                                        name: 'CompanyWorked',
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    component.setLabelAlign('left');
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'selectfield',
                                        cls: [
                                            'DateCls',
                                            'TriggerBlue'
                                        ],
                                        itemId: 'CreateExpProfile',
                                        label: 'Profile',
                                        labelAlign: 'top',
                                        labelCls: 'labelCls',
                                        labelWidth: 90,
                                        name: 'ProfileId',
                                        placeHolder: 'ProfileId',
                                        displayField: 'ProfileValue',
                                        store: 'SearchProfile',
                                        valueField: 'ProfileId',
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    component.setLabelAlign('left');
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        cls: 'bbBlack',
                                        layout: 'hbox',
                                        items: [
                                            {
                                                xtype: 'datepickerfield',
                                                flex: 1,
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue'
                                                ],
                                                itemId: 'CreateExpStartDate',
                                                label: 'From',
                                                labelCls: 'labelCls',
                                                labelWidth: 50,
                                                name: 'StartDate',
                                                value: {
                                                    day: new Date().getDate(),
                                                    month: (new Date().getMonth()+1),
                                                    year: new Date().getFullYear()
                                                },
                                                placeHolder: 'mm/dd/yyyy',
                                                dateFormat: 'd/m/y',
                                                picker: {
                                                    zIndex: 100,
                                                    doneButton: {
                                                        itemId: 'Done'
                                                    }
                                                },
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'datepickerfield',
                                                flex: 1,
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue'
                                                ],
                                                itemId: 'CreateExpEndDate',
                                                label: 'To',
                                                labelCls: 'labelCls',
                                                labelWidth: 50,
                                                name: 'EndDate',
                                                value: {
                                                    day: new Date().getDate(),
                                                    month: (new Date().getMonth()+1),
                                                    year: new Date().getFullYear()
                                                },
                                                placeHolder: 'mm/dd/yyyy',
                                                dateFormat: 'd/m/y',
                                                picker: {
                                                    zIndex: 100,
                                                    doneButton: {
                                                        itemId: 'Done'
                                                    }
                                                },
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        cls: 'requestInnerCnt',
                                        items: [
                                            {
                                                xtype: 'textareafield',
                                                cls: 'textarea',
                                                itemId: 'CreateExpDescription',
                                                clearIcon: false,
                                                name: 'Description'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'hiddenfield',
                                        itemId: 'HFresumeExperienceId'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'LabelCnt',
                        hidden: true,
                        itemId: 'KeywordCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Keyword'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        flex: 1,
                                        cls: 'labelCls',
                                        html: 'Sample keyword'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        cls: 'LabelCnt',
                        hidden: true,
                        itemId: 'CertificationCnt',
                        margin: '0 0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Certification'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        flex: 1,
                                        cls: 'labelCls',
                                        html: 'Sample keyword'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        itemId: 'mybutton16',
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        hidden: true,
                        itemId: 'LanguageCnt',
                        margin: '0 0 10',
                        padding: '0 10',
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'heading',
                                    'iYellow'
                                ],
                                hidden: true,
                                html: 'Language'
                            },
                            {
                                xtype: 'container',
                                hidden: true,
                                margin: '0 0 5 0',
                                layout: {
                                    type: 'hbox',
                                    align: 'center'
                                },
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: 'labelCls',
                                        html: 'Sample Language',
                                        width: 120
                                    },
                                    {
                                        xtype: 'sliderfield',
                                        flex: 1,
                                        cls: 'sliderCls',
                                        value: [
                                            0
                                        ],
                                        maxValue: 10,
                                        listeners: [
                                            {
                                                fn: function(component, eOpts) {
                                                    var thumb = component.element.dom.querySelector('.x-thumb');
                                                    thumb.insertAdjacentHTML( 'afterBegin', '<span class="xValue">0</span>' );
                                                },
                                                event: 'initialize'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'closeIcon',
                                            'noBorder'
                                        ],
                                        text: ' '
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        hidden: true,
                        itemId: 'SettingCnt',
                        margin: '0 0 10',
                        items: [
                            {
                                xtype: 'container',
                                cls: 'AvailableCnt',
                                itemId: 'availabilityCnt',
                                padding: '5 10 7',
                                items: [
                                    {
                                        xtype: 'label',
                                        cls: [
                                            'labelCls',
                                            'cWhite',
                                            'left'
                                        ],
                                        html: 'Available now!',
                                        itemId: 'availabilityLbl',
                                        padding: '5 0 0 0'
                                    },
                                    {
                                        xtype: 'button',
                                        cls: [
                                            'AvailableBtn',
                                            'right'
                                        ],
                                        itemId: 'availabilityBtn',
                                        text: ' '
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                items: [
                                    {
                                        xtype: 'container',
                                        cls: 'requestInnerCnt',
                                        items: [
                                            {
                                                xtype: 'datepickerfield',
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue'
                                                ],
                                                itemId: 'mydatepicker',
                                                label: 'Available From',
                                                labelCls: 'labelCls',
                                                labelWidth: 150,
                                                name: 'AvailabilityDate',
                                                value: {
                                                    year: 2015,
                                                    month: 7,
                                                    day: 26
                                                },
                                                placeHolder: 'mm/dd/yyyy',
                                                dateFormat: 'd/m/y',
                                                picker: {
                                                    zIndex: 100,
                                                    doneButton: {
                                                        itemId: 'Done'
                                                    }
                                                },
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        cls: 'requestInnerCnt',
                                        items: [
                                            {
                                                xtype: 'selectfield',
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue'
                                                ],
                                                itemId: 'locationSelectField',
                                                label: 'Location',
                                                labelCls: 'labelCls',
                                                labelWidth: 100,
                                                name: 'RegionId',
                                                placeHolder: 'Choose location',
                                                autoSelect: false,
                                                displayField: 'CountryName',
                                                store: 'CreateRequestLocation',
                                                valueField: 'CountryName',
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                itemId: 'SettingDateCnt',
                                items: [
                                    {
                                        xtype: 'container',
                                        cls: 'resumeLanguage',
                                        padding: '0 10',
                                        items: [
                                            {
                                                xtype: 'button',
                                                cls: [
                                                    'PlusMiniBtn',
                                                    'right'
                                                ],
                                                itemId: 'ResumeSettingAdd'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'container',
                                        cls: 'requestInnerCnt',
                                        hidden: false,
                                        margin: '0 0 5 0',
                                        padding: '0 5',
                                        layout: {
                                            type: 'hbox',
                                            align: 'center'
                                        },
                                        items: [
                                            {
                                                xtype: 'sliderfield',
                                                flex: 1,
                                                cls: [
                                                    'sliderCls',
                                                    'languageExp'
                                                ],
                                                itemId: 'levelItemID',
                                                label: 'Level',
                                                labelWidth: 80,
                                                name: 'ExperienceLevel',
                                                value: [
                                                    2
                                                ],
                                                maxValue: 10,
                                                listeners: [
                                                    {
                                                        fn: function(component, eOpts) {
                                                            component.setLabelAlign('left');
                                                            var thumb = component.element.dom.querySelector('.x-thumb');
                                                            thumb.insertAdjacentHTML( 'afterBegin', '<span class="xValue">0</span>' );;
                                                            SearchResume.onSliderfieldDrag(component);
                                                        },
                                                        event: 'initialize'
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'selectfield',
                                                cls: [
                                                    'DateCls',
                                                    'TriggerBlue',
                                                    'languageDD'
                                                ],
                                                itemId: 'languageDropdown',
                                                width: 120,
                                                label: '',
                                                labelCls: 'labelCls',
                                                name: 'LanguageId',
                                                placeHolder: 'Language',
                                                autoSelect: false,
                                                displayField: 'LanguageValue',
                                                store: 'SearchLanguage',
                                                valueField: 'LanguageId'
                                            },
                                            {
                                                xtype: 'button',
                                                cls: [
                                                    'closeIcon',
                                                    'noBorder'
                                                ],
                                                itemId: 'mybutton17',
                                                text: ' '
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'button',
                cls: [
                    'btnCircle',
                    'confirmIcon'
                ],
                docked: 'bottom',
                hidden: true,
                itemId: 'Confirm',
                text: ' '
            },
            {
                xtype: 'button',
                cls: [
                    'btnCircle',
                    'confirmIcon'
                ],
                docked: 'bottom',
                hidden: true,
                itemId: 'CompanyExperienceComfirm',
                text: ' '
            },
            {
                xtype: 'button',
                cls: 'CreateNewIcon',
                docked: 'bottom',
                hidden: true,
                itemId: 'CreateCompanyExperience',
                text: ' '
            },
            {
                xtype: 'button',
                cls: [
                    'backIcon',
                    'btnCircle',
                    'b10',
                    'l10'
                ],
                docked: 'bottom',
                itemId: 'EditResumeBackBtn',
                text: ' '
            }
        ],
        listeners: [
            {
                fn: 'onProfileTap',
                event: 'tap',
                delegate: '#profileBtn'
            },
            {
                fn: 'onSkillsTap',
                event: 'tap',
                delegate: '#SkillsBtn'
            },
            {
                fn: 'onPortfolioTap',
                event: 'tap',
                delegate: '#IndustryBtn'
            },
            {
                fn: 'onKeywordTap',
                event: 'tap',
                delegate: '#keywordBtn'
            },
            {
                fn: 'onCertificationTap',
                event: 'tap',
                delegate: '#certificationBtn'
            },
            {
                fn: 'onLanguageTap',
                event: 'tap',
                delegate: '#languageBtn'
            },
            {
                fn: 'onSettingTap',
                event: 'tap',
                delegate: '#SettingBtn'
            },
            {
                fn: 'onMysearchfieldFocus',
                event: 'focus',
                delegate: '#mysearchfield'
            },
            {
                fn: 'onMysearchfieldKeyup',
                event: 'keyup',
                delegate: '#mysearchfield'
            },
            {
                fn: 'onAddSearchBtnTap',
                event: 'tap',
                delegate: '#AddSearchBtn'
            },
            {
                fn: 'onClearSearchIconTap',
                event: 'tap',
                delegate: '#ClearSearchIcon'
            },
            {
                fn: 'onSearchListItemTap',
                event: 'itemtap',
                delegate: '#SearchList'
            },
            {
                fn: 'onMysliderfield3Drag',
                event: 'drag',
                delegate: '#mysliderfield3'
            },
            {
                fn: 'onCloseButtonTap',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'onMysliderfield3Drag1',
                event: 'drag',
                delegate: '#mysliderfield3'
            },
            {
                fn: 'onCloseButtonTap1',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'onCloseButtonTap121',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'onIndustryListItemTap',
                event: 'itemtap',
                delegate: '#IndustryListhidden'
            },
            {
                fn: 'onIndustryListItemTap1',
                event: 'itemtap',
                delegate: '#IndustryList'
            },
            {
                fn: 'onDoneTap11',
                event: 'tap',
                delegate: '#Done'
            },
            {
                fn: 'onCloseButtonTap11',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'onCloseButtonTap111',
                event: 'tap',
                delegate: '#mybutton16'
            },
            {
                fn: 'oncheckBtnTap',
                event: 'tap',
                delegate: '#availabilityBtn'
            },
            {
                fn: 'onResumeSettingAddTap',
                event: 'tap',
                delegate: '#ResumeSettingAdd'
            },
            {
                fn: 'ondurationItemIDDrag11',
                event: 'drag',
                delegate: '#levelItemID'
            },
            {
                fn: 'onDurationItemIDChange11',
                event: 'change',
                delegate: '#levelItemID'
            },
            {
                fn: 'onMyselectfield6Change1',
                event: 'change',
                delegate: '#languageDropdown'
            },
            {
                fn: 'onCloseButtonTap1111',
                event: 'tap',
                delegate: '#mybutton17'
            },
            {
                fn: 'onConfirmBtnTap',
                event: 'tap',
                delegate: '#Confirm'
            },
            {
                fn: 'onCompanyExperienceComfirmTap',
                event: 'tap',
                delegate: '#CompanyExperienceComfirm'
            },
            {
                fn: 'onCreateCompanyExperienceTap',
                event: 'tap',
                delegate: '#CreateCompanyExperience'
            },
            {
                fn: 'onBackBtnTap',
                event: 'tap',
                delegate: '#EditResumeBackBtn'
            },
            {
                fn: 'onContainerPainted',
                single: true,
                event: 'painted'
            }
        ]
    },

    onProfileTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Profile');
    },

    onSkillsTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Skill');
    },

    onPortfolioTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Industry');
    },

    onKeywordTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Keyword');
    },

    onCertificationTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Certification');
    },

    onLanguageTap: function(button, e, eOpts) {
        UserResume.onTopBtnTap(button,'Language');
    },

    onSettingTap: function(button, e, eOpts) {
        // UserResume.onTopBtnTap(button,'Setting');
        UserResume.onSettingBtnTap(button);
    },

    onMysearchfieldFocus: function(textfield, e, eOpts) {
        if(!textfield.getReadOnly()){
            G.show('SearchList');
        }
    },

    onMysearchfieldKeyup: function(textfield, e, eOpts) {
        UserResume.resumePropertySearch(textfield);
    },

    onAddSearchBtnTap: function(button, e, eOpts) {
        UserResume.onAddSearchBtnTap();
    },

    onClearSearchIconTap: function(button, e, eOpts) {
        UserResume.clearSearch();
    },

    onSearchListItemTap: function(dataview, index, target, record, e, eOpts) {
        UserResume.onSearchListItemTap(dataview,record,e);
    },

    onMysliderfield3Drag: function(sliderfield, sl, thumb, e, eOpts) {
        var a=sliderfield.element.dom.querySelector('.xValue');
        a.innerText = sliderfield.getValue()[0];
    },

    onCloseButtonTap: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onMysliderfield3Drag1: function(sliderfield, sl, thumb, e, eOpts) {
        var a=sliderfield.element.dom.querySelector('.xValue');
        a.innerText = sliderfield.getValue()[0];
    },

    onCloseButtonTap1: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onMysliderfield3Drag111: function(sliderfield, sl, thumb, e, eOpts) {
        var a=sliderfield.element.dom.querySelector('.xValue');
        a.innerText = sliderfield.getValue()[0];
    },

    onCloseButtonTap121: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onIndustryListItemTap: function(dataview, index, target, record, e, eOpts) {

    },

    onIndustryListItemTap1: function(dataview, index, target, record, e, eOpts) {
        var targetElement = Ext.get(e.target);
        if(targetElement.hasCls('indHeading') || targetElement.parent('.indHeading')){
            targetElement.parent('.indMain').toggleCls('indVisible');
        }
        else if (targetElement.hasCls('indEdit')){
            UserResume.ShowCreateResumeExperience(record,index);

        }
        else if (targetElement.hasCls('indDelete'))
        {
            var url = ApiBaseUrl+'ResumeExperiences/DeleteResumeExperience';

            Ext.Ajax.request({
                url: url,
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
                params : Ext.JSON.encode(record.data),
                success: function(conn, response, options, eOpts) {
                    var result = Ext.JSON.decode(conn.responseText);
                    if (result.success) {

                        var str=Ext.getStore("ResumeExperiencesStore");
                        var rec=str.data.items[index];
                        str.remove(rec);
                    }
                },
                failure: function(conn, response, options, eOpts) {
                    //failure catch
                    G.showGeneralFailure();
                }
            });
        }
    },

    onDoneTap11: function(button, e, eOpts) {

    },

    onCloseButtonTap11: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onCloseButtonTap111: function(button, e, eOpts) {
        button.up('container').hide();
    },

    onMysliderfield3Drag11: function(sliderfield, sl, thumb, e, eOpts) {
        var a=sliderfield.element.dom.querySelector('.xValue');
        a.innerText = sliderfield.getValue()[0];
    },

    onCloseButtonTap12: function(button, e, eOpts) {
        button.up('container').hide();
    },

    oncheckBtnTap: function(button, e, eOpts) {
        var button=G.get('availabilityBtn');
        UserResume.changeAvailibilityStatus(button.element.hasCls('busyBtn'));

    },

    onResumeSettingAddTap: function(button, e, eOpts) {
        this.addNewLevel();
    },

    ondurationItemIDDrag11: function(sliderfield, sl, thumb, e, eOpts) {
        SearchResume.onSliderfieldDrag(sliderfield);
    },

    onDurationItemIDChange11: function(me, sl, thumb, newValue, oldValue, eOpts) {
        SearchResume.onSliderfieldDrag(me);

        /*var AuthObj = Ext.getStore('AuthStore').getAt(0);

        var requestSettingObj = new Object();
        requestSettingObj.UserId = AuthObj.get('UserId');
        requestSettingObj.ResumeId = AuthObj.get('ResumeId');
        requestSettingObj.ExperienceLevel = newValue;

        UserResume.UpdateSettings(requestSettingObj);*/
    },

    onMyselectfield6Change1: function(selectfield, newValue, oldValue, eOpts) {
        /*var AuthObj = Ext.getStore('AuthStore').getAt(0);
        var requestSettingObj = new Object();
        requestSettingObj.UserId = AuthObj.get('UserId');
        requestSettingObj.ResumeId = AuthObj.get('ResumeId');
        requestSettingObj.LanguageId = newValue;

        UserResume.UpdateSettings(requestSettingObj);*/
    },

    onCloseButtonTap1111: function(button, e, eOpts) {
        button.up('container').destroy();
    },

    onConfirmBtnTap: function(button, e, eOpts) {
        var resumeLanguageModels = new Array();
        var slider = G.get('SettingCnt').element.query('.sliderCls');
        var dd=G.get('SettingCnt').element.query('.languageDD');
        for( var i=0; i< slider.length; i++){
        var resumeLanguage=new Object();
             var sliderId = Ext.get(slider[i]).getId();
             var ddId = Ext.get(dd[i]).getId();
             resumeLanguage.ExperienceLevel = G.get(sliderId).getValue()[0];
             resumeLanguage.LanguageId=G.get(ddId).getValue();
            resumeLanguageModels.push(resumeLanguage);
        }



        var button=G.get('availabilityBtn');
        var AuthObj = Ext.getStore('AuthStore').getAt(0);
        var requestSettingObj = new Object();
        requestSettingObj.UserId = AuthObj.get('UserId');
        requestSettingObj.ResumeId = AuthObj.get('ResumeId');
        requestSettingObj.AvailabilityDate = new Date(G.get('mydatepicker').getValue());
        //requestSettingObj.LanguageId =G.get('languageDropdown').getValue();
        //requestSettingObj.ExperienceLevel = G.get('levelItemID').getValue()[0];
        requestSettingObj.ResumeLanguage=resumeLanguageModels;
        requestSettingObj.Region = G.get('locationSelectField').getValue();
        requestSettingObj.IsAvailable= !button.element.hasCls('busyBtn');
        UserResume.UpdateSettings(requestSettingObj,true);

    },

    onCompanyExperienceComfirmTap: function(button, e, eOpts) {
        UserResume.SaveCompanyExperience();
    },

    onCreateCompanyExperienceTap: function(button, e, eOpts) {
        UserResume.ShowCreateResumeExperience(null);
    },

    onBackBtnTap: function(button, e, eOpts) {
        // G.showHomeView();
        UserResume.onResumeClick();

    },

    onContainerPainted: function(element, eOpts) {
        element.on('tap',function(e){
            var selectedElement =Ext.get(e.target);
            if(!selectedElement.parent('.searchViewCnt')){
                G.hide('SearchList');
            }
        });
    },

    addNewLevel: function() {
<<<<<<< local
        var Cnt=Ext.create('Ext.Container', {
            //     xtype: 'container',
            cls: 'requestInnerCnt',
            hidden: false,
            margin: '0 0 5 0',
            padding: '0 5',
            layout: {
                type: 'hbox',
                align: 'center'
            },
            items: [
                {
                    xtype: 'sliderfield',
                    flex: 1,
                    cls: 'sliderCls',
                    //             itemId: 'levelItemID',
                    label: 'Level',
                    labelWidth: 80,
                    name: 'ExperienceLevel',
                    value: [
                        0
                    ],
                    maxValue: 10,
                    listeners: [
                        {
                            fn: function(component, eOpts) {
                                component.setLabelAlign('left');
                                var thumb = component.element.dom.querySelector('.x-thumb');
                                thumb.insertAdjacentHTML( 'afterBegin', '<span class="xValue">0</span>' );
                                SearchResume.onSliderfieldDrag(component);
                            },
                            event: 'initialize'
                        },
                        {
                            fn: function(sliderfield, sl, thumb, e, eOpts){
                                SearchResume.onSliderfieldDrag(sliderfield);
                            },
                            event: 'drag'
                        },
                        {
                            fn: function(me, sl, thumb, newValue, oldValue, eOpts){
                                SearchResume.onSliderfieldDrag(me);
                            },
                            event: 'change'
                        }
                    ]
                },
                {
                    xtype: 'selectfield',
                    cls: [
                        'DateCls',
                        'TriggerBlue'
                    ],
                    //             itemId: 'languageDropdown',
                    width: 120,
                    label: '',
                    labelCls: 'labelCls',
                    name: 'LanguageId',
                    placeHolder: 'Language',
                    autoSelect: false,
                    displayField: 'LanguageValue',
                    store: 'SearchLanguage',
                    valueField: 'LanguageId'
                },
                {
                    xtype: 'button',
                    cls: [
                        'closeIcon',
                        'noBorder'
                    ],
                    text: ' ',
                    listeners: [
                        {
                            fn: function(button, eOpts) {
                                button.up('container').destroy();
                            },
                            event: 'tap'
                        }
                    ]
                }
            ]
        });
        var Container;

        Container=G.get('SettingDateCnt');

        Container.add(Cnt);
=======
        UserResume.CloneLangaugeControl(0,2);
>>>>>>> other
    }

});