/*
 * File: app/view/SavedSearch.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProDooMobileApp.view.SavedSearch', {
    extend: 'Ext.dataview.List',
    alias: 'widget.SavedSearch',

    requires: [
        'Ext.XTemplate',
        'Ext.Container',
        'Ext.Button',
        'Ext.field.Search'
    ],

    config: {
        store: 'SavedSearchStore',
        cls: [
            'darkBlue',
            'requestList'
        ],
        itemTpl: [
            '<div class="requestCnt">',
            '    <span class="savName">{SearchName}</span>',
            '    <span class="ViewResume right">',
            '    </span>',
            '    <span class="closeIcon">',
            '        <span class="x-button-label closeBtn"> </span>',
            '    </span>',
            '</div>'
        ],
        listeners: [
            {
                fn: 'onListItemTap',
                event: 'itemtap'
            },
            {
                fn: 'onMysearchfieldKeyup',
                event: 'keyup',
                delegate: '#mysearchfield'
            },
            {
                fn: 'onMybutton6Tap1',
                event: 'tap',
                delegate: '#backBtn'
            },
            {
                fn: 'onAddBtnTap1',
                event: 'tap',
                delegate: '#AddBtn1'
            }
        ],
        items: [
            {
                xtype: 'container',
                cls: 'searchViewCnt',
                docked: 'top',
                items: [
                    {
                        xtype: 'button',
                        cls: 'searchBtn',
                        itemId: 'searchBtn'
                    },
                    {
                        xtype: 'searchfield',
                        cls: 'searchRound',
                        itemId: 'mysearchfield',
                        clearIcon: false
                    }
                ]
            },
            {
                xtype: 'button',
                bottom: 10,
                cls: [
                    'btnCircle',
                    'backIcon'
                ],
                docked: 'bottom',
                itemId: 'backBtn',
                left: 10,
                text: ' '
            },
            {
                xtype: 'button',
                bottom: 10,
                cls: [
                    'btnCircle',
                    'confirmIcon',
                    'greenBtn'
                ],
                docked: 'bottom',
                hidden: true,
                text: ' '
            },
            {
                xtype: 'button',
                cls: 'addBtn',
                docked: 'bottom',
                hidden: true,
                itemId: 'AddBtn1',
                text: ' '
            },
            {
                xtype: 'button',
                bottom: 10,
                cls: [
                    'btnCircle',
                    'searchIcon2'
                ],
                docked: 'bottom',
                hidden: true,
                text: ' '
            }
        ]
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        SaveSearch.onSavedSearchResumeItemClick(dataview, index, target, record, e, eOpts);
    },

    onMysearchfieldKeyup: function(textfield, e, eOpts) {
        var store = Ext.getStore('SavedSearchStore');
        store.clearFilter();
        store.filter([
            {
                fn   : function(record) {
                    return record.get('SearchName').toLowerCase().indexOf(textfield.getValue().toLowerCase()) > -1;
                },
                scope: this
            }
        ]);
    },

    onMybutton6Tap1: function(button, e, eOpts) {
        G.ShowView('SearchResult');
    },

    onMybutton6Tap11: function(button, e, eOpts) {
        G.ShowView('SearchResult');
    },

    onAddBtnTap1: function(button, e, eOpts) {
        Ext.create('Ext.MessageBox').show(
            {
                title: '',
                message: 'Save title',
                height:140,
                cls: 'messageBoxCls',
                width:500,
                padding:'0 20',
                prompt: {
                    height: 35
                },
                //         scrollable: true,
                buttons: Ext.MessageBox.YESNO
            }
        );
    }

});